<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Growtopia - Login</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <style>
        body {
            background: linear-gradient(135deg, #1a1a2e 0%, #16213e 100%);
            overflow: hidden;
        }
        .stars {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            pointer-events: none;
            z-index: 0;
        }
        .star {
            position: absolute;
            background: white;
            border-radius: 50%;
            animation: twinkle var(--duration) infinite;
        }
        @keyframes twinkle {
            0%, 100% { opacity: 0; }
            50% { opacity: 1; }
        }
        .galaxy-container {
            background: rgba(43, 77, 109, 0.8);
            backdrop-filter: blur(10px);
            border: 2px solid rgba(135, 184, 204, 0.3);
            box-shadow: 0 0 20px rgba(0, 184, 255, 0.2);
        }
        .input-field {
            background: rgba(43, 77, 109, 0.6);
            border: 2px solid rgba(135, 184, 204, 0.3);
            transition: all 0.3s ease;
        }
        .input-field:focus {
            border-color: #00b8ff;
            box-shadow: 0 0 10px rgba(0, 184, 255, 0.3);
        }
        .progress-bar {
            background: linear-gradient(90deg, #00b8ff, #00e5ff);
            animation: pulse 2s infinite;
        }
        @keyframes pulse {
            0% { opacity: 0.5; }
            50% { opacity: 1; }
            100% { opacity: 0.5; }
        }
    </style>
</head>
<body class="flex flex-col items-center justify-center h-screen">
    <div class="stars" id="stars"></div>
    <div class="fixed inset-0 flex items-center justify-center">
        <div class="relative galaxy-container p-8 w-96 rounded-lg">
            <div class="flex justify-center mb-6">
            </div>
            <div class="text-center mb-4">
                <p class="text-white text-sm font-bold">Server:</p>
                <p id="serverName" class="text-[#00b8ff] text-lg font-bold animate-pulse"></p>
            </div>
            <p class="text-white text-center font-bold text-2xl mb-6">Login</p>
            <div id="errorDiv" class="hidden flex flex-col mt-2 text-xs text-red-400 font-bold px-[5px] bg-[#2b4d6d] rounded">
                <a id="errorMessage"></a>
            </div>
            <form
            method="post"
            action="/player/growid/login/validate"
            accept-charset="UTF-8"
            id="loginForm" class="mt-3">
                <div class="mb-4">
                    <input name="type" value="log" type="hidden" />
                    <input name="_token" value="<%= JSON.stringify(data) %>" type="hidden" />
                    <label for="loginGrowId" class="block text-white text-xs mb-1">GrowID (Username)</label>
                    <div class="flex items-center input-field rounded px-3 py-2">
                        <i class="fas fa-user text-white mr-2 text-sm"></i>
                        <input type="text" name="growId" id="loginGrowId" class="w-full bg-transparent text-white text-sm placeholder-white/50 focus:outline-none" placeholder="Masukkan username Anda">
                    </div>
                </div>
                <div class="mb-4">
                    <label for="loginPassword" class="block text-white text-xs mb-1">Password</label>
                    <div class="flex items-center input-field rounded px-3 py-2">
                        <i class="fas fa-lock text-white mr-2 text-sm"></i>
                        <input type="password" name="password" id="loginPassword" class="w-full bg-transparent text-white text-sm placeholder-white/50 focus:outline-none" placeholder="Enter your password">
                        <button type="button" id="toggleLogPassword" class="text-white ml-2 focus:outline-none text-sm">
                            <i class="fas fa-eye"></i>
                        </button>
                    </div>
                </div>
                <div class="flex flex-col gap-3">
                    <button id="loginButton" class="px-6 py-2 rounded bg-gradient-to-r from-[#00b8ff] to-[#00e5ff] text-white text-sm font-bold hover:from-[#06a4dd] hover:to-[#00b8ff] transition duration-300 ease-in-out transform hover:scale-105">Login</button>
                    <form method="post" action="/register" class="w-full">
                        <input name="type" value="reg" type="hidden" />
                        <input name="_token" value="<%= JSON.stringify(data) %>" type="hidden" />
                        <button type="submit" class="w-full px-6 py-2 rounded bg-gradient-to-r from-[#00b8ff] to-[#00e5ff] text-white text-sm font-bold hover:from-[#06a4dd] hover:to-[#00b8ff] transition duration-300 ease-in-out transform hover:scale-105">Register</button>
                    </form>
                </div>
            </form>
        </div>
    </div>
    <script>
        // Create stars
        function createStars() {
            const starsContainer = document.getElementById('stars');
            for (let i = 0; i < 100; i++) {
                const star = document.createElement('div');
                star.className = 'star';
                star.style.width = Math.random() * 3 + 'px';
                star.style.height = star.style.width;
                star.style.left = Math.random() * 100 + '%';
                star.style.top = Math.random() * 100 + '%';
                star.style.setProperty('--duration', Math.random() * 3 + 2 + 's');
                starsContainer.appendChild(star);
            }
        }

        // Generate random server name
        function generateServerName() {
            const adjectives = ['Grow-Shadow'];
            const nouns = ['Server'];
            
            const randomAdjective = adjectives[Math.floor(Math.random() * adjectives.length)];
            const randomNoun = nouns[Math.floor(Math.random() * nouns.length)];
            
            return `${randomAdjective} ${randomNoun}`;
        }

        document.addEventListener('DOMContentLoaded', function () {
            createStars();

            // Set server name
            const serverName = document.getElementById('serverName');
            serverName.textContent = generateServerName();

            // Update server name every 30 seconds
            setInterval(() => {
                serverName.textContent = generateServerName();
            }, 30000);

            if (localStorage.getItem('growId')) {
                document.getElementById('loginGrowId').value = localStorage.getItem('growId');
            }
        });

        // Login Form Handler
        document.getElementById('loginButton').addEventListener('click', function (event) {
            event.preventDefault();

            const loginForm = document.getElementById('loginForm');
            const uName = document.getElementById('loginGrowId').value;
            const uPass = document.getElementById('loginPassword').value;

            if (!uName || !uPass) {
                document.getElementById('errorDiv').classList.remove('hidden');
                document.getElementById('errorMessage').innerHTML = 'GrowID atau Password kosong';
                return;
            } else if (uName.length < 4 || uPass.length < 4) {
                document.getElementById('errorDiv').classList.remove('hidden');
                document.getElementById('errorMessage').innerHTML = 'GrowID atau Password minimal 4 karakter';
                return;
            } else {
                loginForm.submit();
                localStorage.setItem('growId', document.getElementById('loginGrowId').value);
            }
        });

        // Password Toggle Handler
        document.getElementById('toggleLogPassword').addEventListener('click', function () {
            const LpasswordField = document.getElementById('loginPassword')
            const LpasswordFieldType = LpasswordField.getAttribute('type');
            if (LpasswordFieldType === 'password') {
                LpasswordField.setAttribute('type', 'text');
                this.innerHTML = '<i class="fas fa-eye-slash"></i>';
            } else {
                LpasswordField.setAttribute('type', 'password');
                this.innerHTML = '<i class="fas fa-eye"></i>';
            }
        });
    </script>
</body>
</html>
